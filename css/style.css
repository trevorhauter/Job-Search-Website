body {
    font-family: "Merriweather Sans", sans-serif;
    margin: 0;
    color: white;
    background: rgb(27, 27, 27);
}

/* fixes the way the elements are stacked insdie eachother */
/* basically just solves the issue where if we have an element thats 100% width */
/* of the parent element, and we want 25px of padding on each side */
/* we need to have this css so that way it isn't 100% of the width PLUS */
/* the padding on each side */
* {
    box-sizing: border-box;
}

/* Sets the css for the header */
header {
    background: rgb(43, 43, 43);
    height: 70px;
    display: flex;
    /* aligns horizontally */
    justify-content: center;
    /* aligns vertically */
    align-items: center;
    font-size: 20px;
    /* gievs some space from the header and the content below it */
    margin-bottom: 25px;
}

/* class for the container in the header */
.header-container {
    max-width: 1250px;
    width: 100%;
    /* allows the items to display next to eachother, not on top of eachother */
    display: flex;
    /* puts the text to the middle verticall */
    align-items: center;
    padding: 0 25px;
}

/* gives the header container a size */
.header-container .logo {
    height: 30px;
}

/* sets the width to 100% of 30 pixels of the image */
.header-container .logo img {
    height: 100%;
}

.search {
    width: 100%;
    max-width: 1250px;
    margin: 0 auto;
    /* the first 0 is for the top and the bottom, the second value is for the left and right */
    padding: 0 25px;
}

.search-container {
    background-color: rgb(43, 43, 43);
    height: 60px;
    border-radius: 10px;
    /* overflow hidden is for the elements inside the search container that way they get */
    /* the border radius there too */
    overflow: hidden;
    border: 2px solid #222328;
    /* allows the objects to display next to eachother */
    display: flex;
}

.input-container {
    /* allows the element to grow as long as it can */
    flex-grow: 1;
    /* css below is to center vertically */
    display: flex;
    align-items: center;
}

/* css for the icon */
/* the font awesome icons are treated as text */
.input-container i {
    font-size: 20px;
    margin-left: 25px;
}

/* calls the input within the class, not requiring an additional class! */
.input-container input {
    flex-grow: 1; 
    /* gets rid of the white background of the input */
    background-color: transparent;
    color: white;
    /* removes border and outline when user clicks on the field */
    border: none;
    outline: none;
    margin-left: 20px;
}

.search-button-container {
    background-color: #3060FF;
    width: 100px;
    display: flex;
    /* center it horizontally */
    justify-content: center;
    /* center it vertically */
    align-items: center;
    /* when the cursor is over the button, it makes it the clicky hand to let the user know they can interact */
    cursor: pointer;
    /* takes like 0.2 seconds for changes to happen, makes it look smoother */
    transition: all 0.2s ease;
}

/* on hover it makes the background color a little lighter */
.search-button-container:hover {
    background-color: #5a81ff;
}

.jobs-container {
    /* background: rgb(43, 43, 43); */
    width: 100%;
    max-width: 1250px;
    height: 100vh;
    /* automatically sets the margin so that way the element is centered */
    margin: 0 auto;
    display: flex;
    /* i don't really know what this does but it basically took the job tiles from being right next to showing x jobs */
    /* and put it below, i mean i get its like a column thing but is there one? multiple? idk */
    flex-direction: column;
    padding: 0 25px;
}

.jobs-container h1 {
    margin-left: 25px;
    font-size: 20px;
}

.jobs-list {
    /* grid is similar to flex, but it allows us to specify cols */
    display: grid;
    /* puts a 40 px gap in between each tile */
    gap: 40px;
    /* 1fr says basically "expand my grid as far as possible" so they are all equal */
    grid-template-columns: repeat(3, 1fr);
}

.job-tile {
    background: rgb(43, 43, 43);
    border-radius: 10px;
    display: flex;
    /* the default flex direction puts everything in the same row, we change that to column*/
    flex-direction: column;
    justify-content: flex-start;
    color: white;
    padding: 30px;
    transition: transform 0.2s;
}

.job-tile:hover {
    /* on hover, scales the size to 1.05 times the default */
    transform: scale(1.05);
}

.tile-top {
    width: 100%;
    display: flex;
    /* separates the content in the class */
    justify-content: space-between;
}

.tile-top img {
    width: 50px;
    height: 50px;
    border-radius: 10px;
}

.more-info {
    cursor: pointer;
}

.job-title {
    margin: 20px 0px;
}

.job-title span {
    font-size: 22px;
}

.job-description {
    height: 105px;
    overflow: hidden;
    font-size: 18px;
    color: rgb(150, 150, 150);
    /* allows the description to grow so that way the buttons are all the way on the bottom */
    flex-grow: 1;
}

.job-button-container {
    margin-top: 20px;
    display: flex;
    /* provides spacing between the buttons */
    justify-content: space-between;
    height: 45px;
    color: white;
}

.button {
    flex: 1;
    /* center it horizontally */
    display: flex;
    justify-content: center;
    /* center it vertically */
    align-items: center;
    border-radius: 10px;
    font-size: 14px;
    cursor: pointer;
    background-color: rgb(77, 77, 77);
    transition: all 0.2s ease;
}

.button:hover {
    background-color: rgb(90, 90, 90);
}

.apply-now {
    color: white;
    background-color: #3060FF;
    margin-right: 15px;
}

.apply-now:hover {
    background-color: #5a81ff;
}

/* media queries are usually at the bottom of the css page */

@media screen and (max-width: 910px) {
    .jobs-list {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media screen and (max-width: 570px) {
    .jobs-list {
        grid-template-columns: repeat(1, 1fr);
    }
}